<Window x:Class="DevicesSimulationWindow.View.DeviceSimulatorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:DevicesSimulationWindow.Extensions"
        Title="DeviceSimulatorView" Height="365" Width="600"
        DataContext="{Binding Main, Source={StaticResource Locator}}" 
        xmlns:my="clr-namespace:DevicesSimulationWindow.View"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <local:ImagePathConverter x:Key="ImagePathConverter"></local:ImagePathConverter>
        
        <Style TargetType="{x:Type DataGrid}">
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="RowBackground" Value="LightGray"/>
                    <!--<Setter Property="Foreground" Value="Red"></Setter>
                    <Setter Property="RowBackground" Value="LightGray"></Setter>--> 
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGridRow}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Status}"  Value="1">
                    <!--<Setter Property="Background" Value="LightGray"></Setter>-->
                    <Setter Property="Foreground" Value="Red"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Status}"  Value="3">
                    <!--<Setter Property="Background" Value="LightGray"></Setter>-->
                    <Setter Property="Foreground" Value="Green"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="{x:Type DataGridCell}">            
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="True">
                    <!--<Setter Property="Background" Value="LightGray"/>-->                    
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Grid >
        <StackPanel Margin="10">
            <ToolBarTray Opacity=".9">
                <ToolBar>
                    <Button ToolTip="New" Command="{Binding NewCommand}">
                        <StackPanel>
                            <Image Source="/Icons/New-file-icon.png" />
                            <!--<Image Source="{Binding Path=IconNewProperty, Converter={StaticResource ImagePathConverter}}"></Image>-->
                        </StackPanel>
                    </Button>
                    <Button ToolTip="Load" Command="{Binding OpenCommand}">
                        <StackPanel>
                            <Image Source="/Icons/Load-icon.png" />
                            <!--<Image Source="{Binding Path=IconOpenProperty, Converter={StaticResource ImagePathConverter}}"></Image>-->
                        </StackPanel>
                    </Button>
                </ToolBar>
            </ToolBarTray>
            <ToolBarTray Opacity=".9">
                <!--<ToolBar Opacity=".9">
                    <CheckBox Command="{Binding SelectAllCommand}" >
                        <CheckBox.Style>
                            <Style TargetType="{x:Type CheckBox}">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="UnselectAll"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Content" Value="SelectAll"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>                    
                </ToolBar>-->
                <ToolBar>
                    <Button ToolTip="Start" Command="{Binding StartCommand}">
                        <StackPanel>
                            <!--<Image Source="/Icons/Start-icon.png" />-->
                            <!--<Image Source="{Binding Path=IconStartProperty, Converter={StaticResource ImagePathConverter}}">                                                                                                               
                            </Image>-->
                            <Image Width="16" Height="16" Margin="3,0" Source="/Icons/Start-icon.png">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding validStart}" Value="true">
                                                <Setter Property="Source" Value="/Icons/Start-icon.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding validStart}" Value="false">
                                                <Setter Property="Source" Value="/Icons/Start-Disabled-icon.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </StackPanel>
                    </Button>
                    <Button ToolTip="Pause" Command="{Binding PauseCommand}">
                        <StackPanel>
                            <Image Source="/Icons/Pause-icon.png" />
                            <!--<Image Source="{Binding Path=IconPauseProperty, Converter={StaticResource ImagePathConverter}}"/>-->
                        </StackPanel>
                    </Button>
                    <Button ToolTip="Stop" Command="{Binding StopCommand}">
                        <StackPanel>
                            <Image Source="/Icons/Stop-icon.png" />
                            <!--<Image Source="{Binding Path=IconStopProperty, Converter={StaticResource ImagePathConverter}}" />-->
                        </StackPanel>
                    </Button>                    
                </ToolBar>
                <ToolBar>
                    <Button ToolTip="Add" Command="{Binding AddCommand}">
                        <StackPanel>
                            <Image Source="/Icons/Drive-add-icon.png" />
                        </StackPanel>
                    </Button>
                    <Button ToolTip="Delete" Command="{Binding DeleteCommand}">
                        <StackPanel>
                            <Image Source="/Icons/Drive-delete-icon.png" />
                        </StackPanel>
                    </Button>
                </ToolBar>
            </ToolBarTray>
            
            <DataGrid AutoGenerateColumns="False" CanUserAddRows="False"                      
                Height="250" ItemsSource="{Binding SimDeviceList}" IsReadOnly="{Binding IsRunning}"
                        SelectedItem="{Binding SelectedSimDevice}"
                      >
                <DataGrid.InputBindings>
                    <KeyBinding Key="Delete" Command="{Binding DeleteSimDeviceCommand}" />
                </DataGrid.InputBindings>
                
                <DataGrid.Columns>
                    <!--<DataGridCheckBoxColumn Binding="{Binding IsCheckChoose, UpdateSourceTrigger=PropertyChanged}">                        
                    </DataGridCheckBoxColumn>-->

                    <DataGridTextColumn Header="Imei" IsReadOnly="True"
                        Binding="{Binding Path=Imei}" SortDirection="{x:Null}">
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="Description" IsReadOnly="False"
                                    Binding="{Binding Path=Description}" SortDirection="{x:Null}">
                    </DataGridTextColumn>
                    
                    <DataGridTextColumn Header="Time(s)" Width="*" IsReadOnly="False"
                                    Binding="{Binding Path=SendTime, Mode= TwoWay, UpdateSourceTrigger=PropertyChanged}" SortDirection="{x:Null}">
                    </DataGridTextColumn>

                    <DataGridTemplateColumn Width="*" Header="Complete" IsReadOnly="False">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate >
                                <TextBlock Text="{Binding Path=SendComplete}" TextWrapping="Wrap" TextAlignment="Right"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="*" Header="Total" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=SendTotal}" TextAlignment="Right"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridComboBoxColumn Header="Status" IsReadOnly="True"
                        SelectedValueBinding="{Binding Status}"
                        SelectedValuePath="StatusID"
                        DisplayMemberPath="Description" >
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding 
                                    RelativeSource={RelativeSource Findancestor, AncestorType={x:Type Window}}, 
                                                        Path=DataContext.StatusWorkingList}"/>
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding 
                                    RelativeSource={RelativeSource Findancestor, AncestorType={x:Type Window}}, 
                                                        Path=DataContext.StatusWorkingList}"/>
                            </Style>
                        </DataGridComboBoxColumn.EditingElementStyle>
                    </DataGridComboBoxColumn>                   

                </DataGrid.Columns>
                        
            </DataGrid>
            <!--<my:SimDeviceView DataContext="{Binding SelectedSimDevice}" />-->
        </StackPanel>
    </Grid>
</Window>
