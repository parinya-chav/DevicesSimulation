<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio 10.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="10.0">
 <Targets>
  <Target Name="D:\github_new20120612\DevicesSimulation\DevicesSimulation\DevicesSimulationWindow\bin\Debug\DevicesSimulationWindow.exe">
   <Modules>
    <Module Name="devicessimulationwindow.exe">
     <Namespaces>
      <Namespace Name="DevicesSimulationWindow.Design">
       <Types>
        <Type Name="DeviceSimulatorServiceAgent" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-11-16 03:44:42Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\github_new20120612\DevicesSimulation\DevicesSimulation\DevicesSimulationWindow\Design" File="DeviceSimulatorServiceAgent.cs" Line="27">In method 'DeviceSimulatorServiceAgent.DeviceSimulatorServiceAgent()', call System.IDisposable.Dispose on object 'sessionFactory' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="DevicesSimulationWindow.ViewModel">
       <Types>
        <Type Name="DeviceSimulatorViewModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(DevicesSimulationWindow.Design.IDeviceSimulatorService,DevicesSimulationWindow.ViewModel.SimDeviceViewModel,DevicesSimulationWindow.ViewModel.HeaderDevicesSimulatorViewModel,DevicesSimulationWindow.ViewModel.LoadDeviceSimulatorViewModel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2012-11-16 03:44:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="D:\github_new20120612\DevicesSimulation\DevicesSimulation\DevicesSimulationWindow\ViewModel" File="DeviceSimulatorViewModel.cs" Line="488">'DeviceSimulatorViewModel.DeviceSimulatorViewModel(IDeviceSimulatorService, SimDeviceViewModel, HeaderDevicesSimulatorViewModel, LoadDeviceSimulatorViewModel)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;DeviceSimulatorViewModel..ctor(IDeviceSimulatorService, SimDeviceViewModel, HeaderDevicesSimulatorViewModel, LoadDeviceSimulatorViewModel)&#xD;&#xA;DeviceSimulatorViewModel.set_IconStartProperty(String):Void&#xD;&#xA;ObservableObject.RaisePropertyChanged(String):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#taskManage()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2012-11-16 03:44:42Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="D:\github_new20120612\DevicesSimulation\DevicesSimulation\DevicesSimulationWindow\ViewModel" File="DeviceSimulatorViewModel.cs" Line="528">In method 'DeviceSimulatorViewModel.taskManage()', call System.IDisposable.Dispose on object 'simTask' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
